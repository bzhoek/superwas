# [ Cluster ]

# -- Mandatory properties --
# Defining a cluster only takes a name
cluster.name=asterixCluster

# [ Application Server ]

# -- Mandatory properties --
server.0.name=server1

# The Node on which the server will be created.
server.0.node=asterixNode01

# Scope can be either cluster or node
server.0.scope=cluster

# Target should be a valid cluster or node (depending on scope)
server.0.target=asterixCluster

# -- Optional Server properties --

# Weight - Set the cluster number weight. The weight should be an
# integer between 0 and 20. 0 means the server acts as a
# backup server only.
server.0.weight=2

# verboseModeClass - Specifies whether to use verbose debug
# output for class loading. The default is to not enable verbose class
# loading.
server.0.verboseModeClass=false

# verboseModeJNI - Specifies whether to use verbose debug output for
# native method invocation. The default is not to enable verbose Java
# Native Interface (JNI) activity.
server.0.verboseModeJNI=false

# classpath - If you need to add a classpath to this field, enter each
# classpath entry into a separate table row. You do not have to add a
# colon or semicolon at the end of each entry.
server.0.classpath=

# initialHeapSize - Specifies, in megabytes, the initial heap size
# available to the JVM code. If this field is left blank, the default
# value 256 is used.
server.0.initialHeapSize=

# maximumHeapSize - Specifies, in megabytes, the maximum heap size that
# is available to the JVM code. If this field is left blank, the default
# value 768 is used.
server.0.maximumHeapSize=

# verboseModeGarbageCollection - Specifies whether to use verbose debug
# output for garbage collection. The default is not to enable verbose
# garbage collection.
server.0.verboseModeGarbageCollection=false

# runHProf - Specifies whether to use HProf profiler support. To use another
# profiler, specify the custom profiler settings using the HProf Arguments
# setting. The default is not to enable HProf profiler support.
server.0.runHProf=false

# hprofArguments - Specifies command-line profiler arguments to pass to
# the JVM code that starts the application server process. You can specify
# arguments when HProf profiler support is enabled.
server.0.hprofArguments=

# debugMode - Specifies whether to run the JVM in debug mode. The default
# is to not enable debug mode support.
server.0.debugMode=false

# debugArgs - Specifies command-line debug arguments to pass to the JVM
# code that starts the application server process
server.0.debugArgs=

# genericJvmArguments - Specifies command-line arguments to pass to the
# Java virtual machine code that starts the application server process.
server.0.genericJvmArguments=

# workingDirectory - Specifies the file system directory that the process
# uses as its current working directory. Defaults to ${USER_INSTALL_ROOT}.
server.0.workingDirectory=${USER_INSTALL_ROOT}

# umask - Specifies the user mask under which the process runs (the
# file-mode permission mask). Default is 022.
server.0.umask=022

# stdoutFilename - Specifies the file to which the standard output stream
# is directed. Defaults to ${SERVER_LOG_ROOT}/native_stdout.log.
server.0.stdoutFilename=${SERVER_LOG_ROOT}/native_stdout.log

# stderrFilename - Specifies the file to which the standard error stream
# is directed. Defaults to ${SERVER_LOG_ROOT}/native_stderr.log.
server.0.stderrFilename=${SERVER_LOG_ROOT}/native_stderr.log

# maximumStartupAttempts - Specifies the maximum number of times to
# attempt to start the application server before giving up. Default to 3.
server.0.maximumStartupAttempts=3

# Specifies, in seconds the frequency of communication attempts between the
# parent process, such as the node agent, and the process it has spawned,
# such as an application server. Defaults to 60.
server.0.pingInterval=60

# pingTimeout - When a parent process is spawning a child process, such
# as when a process manager spawns a server, the parent process pings the
# child process to see whether the child was spawned successfully. This
# value specifies the number of seconds that the parent process should
# wait (after pinging the child process) before assuming that the child
# process failed. Defaults to 300.
server.0.pingTimeout=300

# autoRestart - Specifies whether the process should restart automatically
# if it fails. Defaults to true.
server.0.autoRestart=true

# nodeRestartState - The setting only applies for the Network Deployment
# product. It specifies the desired behavior of the servers after the node
# completely shuts down and restarts. Defaults to RUNNING. Valid values
# are RUNNING, STOPPED and PREVIOUS.
server.0.nodeRestartState=RUNNING

# enableServletCaching - Specifies that if a servlet is invoked once and
# it generates output to be cached, a cache entry is created containing
# not only the output, but also side effects of the invocation. These side
# effects can include calls to other servlets or JavaServer Pages (JSP)
# files, as well as metadata about the entry, including timeout and entry
# priority information. Defaults to false.
server.0.enableServletCaching=false

# webContainerThreadPoolInactivityTimeout - Specifies the number of milliseconds of inactivity that should elapse
# before a thread is reclaimed. A value of 0 indicates not to wait and a
# negative value (less than 0) means to wait forever. Defaults to 3500.
server.0.webContainerThreadPoolInactivityTimeout=3500

# webContainerThreadPoolIsGrowable - Specifies whether the number of
# threads can increase beyond the maximum size configured for the thread
# pool. Defaults to false.
server.0.webContainerThreadPoolIsGrowable=false

# webContainerThreadPoolMaximumSize - Specifies the maximum number of
# threads to maintain in the default thread pool. Defaults to 50.
server.0.webContainerThreadPoolMaximumSize=50

# webContainerThreadPoolMinimumSize - Specifies the minimum number of
# threads to allow in the pool. Defaults to 10.
server.0.webContainerThreadPoolMinimumSize=10

# Specifies wether to remove the HTTPS transport chains. Defaults to false
# (ie. keep the HTTPs chains).
server.0.noSecurePort=false

# sessionTimeout - Specifies how long a session can go unused before it
# is no longer valid. Specify the value in minutes greater than or equal
# to two. Defaults to 30.
server.0.sessionTimeout=30

# Indicates that the server should be created based on the settings of
# the specified server. The properties from the specified server will be
# copied to the new server. The specified server should be defined before
# it is referenced in a createFromTemplate property.
server.0.createFromTemplate=

# envEntry is used to define Environment Entries.

# envEntry.name - Mandatory, specifies the name (or key) for the environment entry.
server.0.envEntry.0.name=

# envEntry.value - Mandatory, specifies the value paired with the specified name.
server.0.envEntry.0.value=

# envEntry.description - Optional, provides information about the name-value pair
server.0.envEntry.0.description=

# customJVMParam is used to define JVM custom properties.

# customJVMParam.name - Mandatory, specifies the name (or key) for the custom property.
server.0.customJVMParam.0.name=

# customJVMParam.value - Mandatory, specifies the value paired with the specified name.
server.0.customJVMParam.0.value=

# customJVMParam.description - Optional, provides information about the name-value pair
server.0.customJVMParam.0.description=

# messagelistener is used to define listener ports. A listener port
# defines the association between a connection factory, a destination,
# and a deployed message-driven bean. This enables deployed message-driven
# beans associated with the port to retrieve messages from the destination

# messagelistener.name - Mandatory, the name by which the listener port
# is known for administrative purposes
server.0.messagelistener.0.name=

# connectionFactoryJNDIName - Mandatory, the JNDI name for the JMS
# connection factory to be used by the listener port.
server.0.messagelistener.0.connectionFactoryJNDIName=

# messagelistener.destinationJNDIName - Mandatory, the JNDI name for
# the destination to be used by the listener port.
server.0.messagelistener.0.destinationJNDIName=

# maxMessages, Optional, the maximum number of messages that the listener
# can process in one transaction. Defaults to 1.
server.0.messagelistener.0.maxMessages=1

# maxRetries - Optional, the maximum number of times that the listener
# tries to deliver a message to a message-driven bean instance before the
# listener is stopped. Defaults to 0.
server.0.messagelistener.0.maxRetries=0

# maxSessions - Optional, specifies the maximum number of concurrent
# sessions that a listener can have with the JMS server to process
# messages. Defaults to 1.
server.0.messagelistener.0.maxSessions=1

# state - Optional, the state that you want the listener port to have
# when the application server is next restarted. Defaults to START. Valid
# values are START and STOP.
server.0.messagelistener.0.state=START
